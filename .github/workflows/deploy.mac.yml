name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Python ${{ matrix.container }} on ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        container: ["archlinux:latest", "ubuntu:latest"]

    container:
      image: ${{ matrix.container }}

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Chrome
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
          elif [ "${{ runner.os }}" = "macOS" ]; then
            brew install --cask google-chrome
          fi
        shell: bash

      - name: Set up Tor
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            sudo apt-get install -y tor
            sudo service tor start
          elif [ "${{ runner.os }}" = "macOS" ]; then
            brew install tor
            brew services start tor
          fi
        shell: bash

      - name: Run tox
        run: poetry run tox

      - name: Upload coverage reports to Codecov
        if: contains(env.USING_COVERAGE, matrix.python-version) && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: true

  package:
    name: Build package
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run: python -m pip install poetry

      - name: Build package
        run: poetry build

      - name: Show result
        run: ls -l dist

      - name: Install package
        run: python -m pip install .

      - name: Import package
        run: python -c "import syamaguc"
